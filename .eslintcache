[{"/home/linux/projects/rover/rover-front/rover-frontend/src/index.js":"1","/home/linux/projects/rover/rover-front/rover-frontend/src/App.js":"2","/home/linux/projects/rover/rover-front/rover-frontend/src/themeConfig.js":"3","/home/linux/projects/rover/rover-front/rover-frontend/src/Routes.js":"4","/home/linux/projects/rover/rover-front/rover-frontend/src/components/About.jsx":"5","/home/linux/projects/rover/rover-front/rover-frontend/src/components/Home.jsx":"6","/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/Navbar.jsx":"7","/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/Footer.jsx":"8","/home/linux/projects/rover/rover-front/rover-frontend/src/data/socialList.js":"9","/home/linux/projects/rover/rover-front/rover-frontend/src/data/cardList.js":"10","/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/LitleCard.jsx":"11","/home/linux/projects/rover/rover-front/rover-frontend/src/hooks/useGetGps.js":"12","/home/linux/projects/rover/rover-front/rover-frontend/src/components/Gps.jsx":"13"},{"size":432,"mtime":1607194296990,"results":"14","hashOfConfig":"15"},{"size":1113,"mtime":1607045620894,"results":"16","hashOfConfig":"15"},{"size":527,"mtime":1607025305016,"results":"17","hashOfConfig":"15"},{"size":429,"mtime":1607024236579,"results":"18","hashOfConfig":"15"},{"size":134,"mtime":1607024212782,"results":"19","hashOfConfig":"15"},{"size":457,"mtime":1607050151493,"results":"20","hashOfConfig":"15"},{"size":1904,"mtime":1607026715889,"results":"21","hashOfConfig":"15"},{"size":1693,"mtime":1607194393402,"results":"22","hashOfConfig":"15"},{"size":659,"mtime":1607029617478,"results":"23","hashOfConfig":"15"},{"size":234,"mtime":1607048433686,"results":"24","hashOfConfig":"15"},{"size":1299,"mtime":1607048493990,"results":"25","hashOfConfig":"15"},{"size":1312,"mtime":1607436034469,"results":"26","hashOfConfig":"15"},{"size":1674,"mtime":1607435945875,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"fwhtk4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/linux/projects/rover/rover-front/rover-frontend/src/index.js",[],["58","59"],"/home/linux/projects/rover/rover-front/rover-frontend/src/App.js",["60"],"import React from \"react\";\nimport { ThemeProvider, makeStyles, Container } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, HashRouter } from \"react-router-dom\";\nimport theme from \"./themeConfig\";\nimport Routes from \"./Routes\";\nimport Navbar from \"./components/shared/Navbar\";\nimport Footer from \"./components/shared/Footer\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename=\"/\">\n        <div className={classes.root}>\n          <Navbar />\n          <div className={classes.content}>\n            <div className={classes.toolbar}></div>\n            <Container maxWidth=\"lg\">\n              <Switch>\n                <Routes />\n              </Switch>\n            </Container>\n          </div>\n          <Footer />\n        </div>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/linux/projects/rover/rover-front/rover-frontend/src/themeConfig.js",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/Routes.js",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/components/About.jsx",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/components/Home.jsx",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/Navbar.jsx",["61"],"import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  Icon,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n  withStyles,\n  Badge,\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n    color: theme.palette.common.white,\n  },\n  appBar: {\n    // backgroundColor: theme.palette.primary.dark,\n  },\n  textWhite: {\n    color: theme.palette.common.white,\n    textDecoration: \"none\",\n  },\n}));\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: \"0 4px\",\n  },\n}))(Badge);\n\nconst Navbar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <Link to=\"/\" className={classes.title}>\n          <ListItem button>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Bolivian flag\"\n                variant=\"square\"\n                src={`${process.env.PUBLIC_URL}/assets/images/bandera.png`}\n              />\n            </ListItemAvatar>\n            <ListItemText primary=\"ROVER\"></ListItemText>\n          </ListItem>\n        </Link>\n        <IconButton aria-label=\"button\">\n          <StyledBadge badgeContent={4} color=\"error\">\n            <Icon color=\"inherit\">notifications</Icon>\n          </StyledBadge>\n        </IconButton>\n        <Link to=\"/\" className={classes.textWhite}>\n          <Button variant=\"text\" color=\"inherit\">\n            Home\n          </Button>\n        </Link>\n        <Link to=\"/about\" className={classes.textWhite}>\n          <Button variant=\"text\" color=\"inherit\">\n            About\n          </Button>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/Footer.jsx",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/data/socialList.js",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/data/cardList.js",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/components/shared/LitleCard.jsx",["62","63"],"import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    width: \"100px\",\n    height: \"100px\",\n  },\n  centerImg: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"16px\",\n  },\n}));\n\nconst LitleCard = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const openGps = () => history.push(\"/data/gps\");\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={openGps}>\n        <div className={classes.centerImg}>\n          <CardMedia\n            className={classes.media}\n            image={`${process.env.PUBLIC_URL}/assets/images/${props.data.src}`}\n            title=\"Satellite\"\n          />\n        </div>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.data.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.data.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default LitleCard;\n","/home/linux/projects/rover/rover-front/rover-frontend/src/hooks/useGetGps.js",[],"/home/linux/projects/rover/rover-front/rover-frontend/src/components/Gps.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":27,"nodeType":"70","messageId":"71","endLine":3,"endColumn":33},{"ruleId":"68","severity":1,"message":"72","line":9,"column":3,"nodeType":"70","messageId":"71","endLine":9,"endColumn":13},{"ruleId":"68","severity":1,"message":"73","line":3,"column":3,"nodeType":"70","messageId":"71","endLine":3,"endColumn":9},{"ruleId":"68","severity":1,"message":"74","line":6,"column":3,"nodeType":"70","messageId":"71","endLine":6,"endColumn":14},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","no-global-assign","no-unsafe-negation"]